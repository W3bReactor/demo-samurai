{"version":3,"file":"static/js/165.ab0cd390.chunk.js","mappings":"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","sources":["webpack://project/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://project/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","webpack://project/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/common/FormsControls/FormsControls.jsx","hoc/withAuthRedirect.js","utils/validators/index.js","webpack://project/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__ZMm53\",\"dialogsItems\":\"Dialogs_dialogsItems__9IK2h\",\"messages\":\"Dialogs_messages__DWiRc\",\"messagesAdd\":\"Dialogs_messagesAdd__HXKqh\",\"messagesTextarea\":\"Dialogs_messagesTextarea__doGAa\",\"messagesBtn\":\"Dialogs_messagesBtn__ndOpl\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__e4043\",\"link\":\"DialogItem_link__E0AxX\"};","import React from 'react';\r\nimport cl from \"./DialogItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = '/dialogs/' + props.id\r\n\r\n    return (\r\n        <div className={`${cl.dialog}`}>\r\n            <NavLink to={path} className={cl.link}>\r\n                <img src=\"https://best-fly.ru/wp-content/uploads/2020/08/ikonka-malchik.jpg\"/>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__ts6KG\",\"right\":\"Message_right__y0RB6\",\"left\":\"Message_left__DXvVv\"};","import React from 'react';\r\nimport cl from \"./Message.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={`${props.from ? cl.left : cl.right} ${cl.message}`}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport cl from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../utils/validators\";\r\n\r\nconst maxLength = maxLengthCreator(100)\r\nconst minLength = minLengthCreator(1)\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage\r\n    let dialogsElements = state.dialogsData.map((d) => <DialogItem key={d.id} name={d.name} id={d.id}/>)\r\n    let messagesElements = state.messagesData.map((p) => <Message key={p.id} from={p.from} message={p.message}/>)\r\n\r\n\r\n\r\n    const addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageText)\r\n    }\r\n\r\n    return (\r\n        <div className={cl.dialogs}>\r\n            <div className={cl.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={cl.messages} >\r\n                <div>\r\n                    {messagesElements}\r\n                </div>\r\n                <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={cl.messagesAdd}>\r\n                        <Field placeholder=\"Enter your message\" name={'newMessageText'}\r\n                               component={Textarea} className={cl.messagesTextarea} validate={[required, maxLength, minLength]}/>\r\n            <button className={cl.messagesBtn}>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'message'})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageText) => {\r\n            dispatch(addMessageActionCreator(newMessageText))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs)","import React from 'react';\r\nimport cl from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../../../utils/validators\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error\r\n\r\n    return (\r\n        <div className={`${cl.formControl}  ${hasError && cl.error}`}>\r\n            {children}\r\n            {hasError && <div>{error}</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n};\r\n\r\nexport const CreateField = ({placeholder, name, validators, component, props = {}, text = \"\"}) => {\r\n    return (\r\n        <label>\r\n            <Field validate={validators} component={component} name={name} placeholder={placeholder} {...props}/> {text}\r\n        </label>\r\n    )\r\n}","import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({isAuth: state.auth.isAuth})\r\n\r\n\r\nexport let withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","export const required = (value) => {\r\n    if(value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n    if(value.length < minLength) return `Min length is ${minLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__xHSZX\",\"error\":\"FormsControls_error__6OijT\",\"errorRight\":\"FormsControls_errorRight__OhQ5L\",\"formSummaryError\":\"FormsControls_formSummaryError__E-rfX\"};"],"names":["props","path","id","className","cl","to","src","name","from","message","maxLength","maxLengthCreator","minLength","minLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","state","dialogsPage","dialogsElements","dialogsData","map","d","messagesElements","messagesData","p","values","addMessage","newMessageText","compose","connect","dispatch","addMessageActionCreator","withAuthRedirect","Dialogs","FormControl","input","meta","touched","error","children","hasError","restProps","child","Input","CreateField","validators","text","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React","value","length"],"sourceRoot":""}