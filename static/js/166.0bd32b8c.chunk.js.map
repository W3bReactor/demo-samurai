{"version":3,"file":"static/js/166.0bd32b8c.chunk.js","mappings":"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","sources":["webpack://project/./src/components/Profile/Profile.module.css?b512","webpack://project/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://project/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://project/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/FormsControls/FormsControls.jsx","hoc/withAuthRedirect.js","utils/validators/index.js","webpack://project/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__xfDA3\"};","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"ProfileInfo_profile__yRYan\",\"profileItem\":\"ProfileInfo_profileItem__JKn0H\",\"profileName\":\"ProfileInfo_profileName__nRoUR\",\"social\":\"ProfileInfo_social__F4R1j\",\"socialLink\":\"ProfileInfo_socialLink__1IInQ\"};","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState({editMode: true})\r\n    }\r\n    deActivateEditMode = () => {\r\n        this.setState({editMode: false})\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({status: e.currentTarget.value})\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({status: this.props.status})\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {!this.state.editMode &&\r\n                    <li>\r\n                        <div onDoubleClick={this.activateEditMode}>Status: {this.props.status || '---'}</div>\r\n                    </li>\r\n                }\r\n                {this.state.editMode &&\r\n                    <li>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deActivateEditMode}\r\n                               type=\"text\" value={this.state.status}/>\r\n                    </li>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        if(status !== props.status) {\r\n            setStatus(props.status)\r\n        }\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        if(status !== props.status) {\r\n            props.updateStatus(status)\r\n        }\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n                <li>\r\n                    <div onDoubleClick={activateEditMode}>Status: {props.status || '---'}</div>\r\n                </li>\r\n            }\r\n            {editMode &&\r\n                <li>\r\n                    <input value={status} onChange={onChange} onBlur={deactivateEditMode} autoFocus={true} type=\"text\" />\r\n                </li>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProfileStatusHooks;","import React from 'react';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport cl from './ProfileInfo.module.css'\r\nimport ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusHooks from \"./ProfileStatusHooks\";\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n    return (\r\n        <div>{!profile ? <Preloader/> :\r\n            <div>\r\n                <div>\r\n                    <img\r\n                        src=\"https://funart.pro/uploads/posts/2020-04/1587324623_16-p-letnie-foni-dlya-rabochego-stola-113.jpg\"/>\r\n                </div>\r\n\r\n                <div className={cl.profile}>\r\n\r\n                    <img\r\n                        src={!profile.photos.small ? \"https://www.freepngimg.com/thumb/facebook/62681-flat-icons-face-computer-design-avatar-icon.png\" : profile.photos.small}/>\r\n                    <div className={cl.profileItem}>\r\n                        <div className={cl.profileName}>{profile.fullName}</div>\r\n                        <ul>\r\n                            <ProfileStatusHooks status={status} updateStatus={updateStatus}/>\r\n                            <li>\r\n                                <div>Description: {profile.aboutMe}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div>Searching for a job: {profile.lookingForAJob ? 'Yes' : 'No'} </div>\r\n                            </li>\r\n                            <li>\r\n                                <div>{profile.lookingForAJobDescription !== null ? `Job description: ${profile.lookingForAJobDescription}` : ''}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div>Website: {profile.contacts.website !== null ?\r\n                                    <a href={profile.contacts.website}>Click</a> : \"Don't Have\"}</div>\r\n                            </li>\r\n                        </ul>\r\n                        <div className={cl.social}>\r\n                            <ul>\r\n                                <li>\r\n                                    {profile.contacts.facebook !== null ?\r\n                                        <a className={cl.socialLink} href={profile.contacts.facebook}\r\n                                           target='_blank'>Facebook</a>\r\n                                        : ''}\r\n                                </li>\r\n                                <li>\r\n                                    {profile.contacts.vk !== null ?\r\n                                        <a className={cl.socialLink} href={profile.contacts.vk}\r\n                                           target='_blank'>VK</a>\r\n                                        : ''}\r\n                                </li>\r\n                                <li>\r\n                                    {profile.contacts.twitter !== null ?\r\n                                        <a className={cl.socialLink} href={profile.contacts.twitter}\r\n                                           target='_blank'>Twitter</a>\r\n                                        : ''}\r\n                                </li>\r\n                                <li>\r\n                                    {profile.contacts.instagram !== null ?\r\n                                        <a className={cl.socialLink} href={profile.contacts.instagram}\r\n                                           target='_blank'>Instagram</a>\r\n                                        : ''}\r\n                                </li>\r\n                                <li>\r\n                                    {profile.contacts.youtube !== null ?\r\n                                        <a className={cl.socialLink} href={profile.contacts.youtube}\r\n                                           target='_blank'>Youtube</a>\r\n                                        : ''}\r\n                                </li>\r\n                                <li>\r\n                                    {profile.contacts.github !== null ?\r\n                                        <a className={cl.socialLink} href={profile.contacts.github}\r\n                                           target='_blank'>Github</a>\r\n                                        : ''}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        }</div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__hbNLN\",\"postsTitle\":\"MyPosts_postsTitle__udqeF\",\"postsAdd\":\"MyPosts_postsAdd__luULd\",\"postsTextarea\":\"MyPosts_postsTextarea__mWzRk\",\"postsBtn\":\"MyPosts_postsBtn__UST+A\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__KNpN5\",\"like\":\"Post_like__sjxtb\"};","import React, { useState } from 'react'\r\nimport cl from './Post.module.css'\r\n\r\n\r\nconst Post = (props) => {\r\n  const [likes, setLikes] = useState(props.likes)\r\n  const [liked, setLiked] = useState(false)\r\n  const checkLikes = () => {\r\n    if(liked === false) {\r\n      setLikes(likes + 1)\r\n      setLiked(true)\r\n    } else {\r\n      setLikes(likes - 1)\r\n      setLiked(false)\r\n    }\r\n  }\r\n  return (\r\n    <div className={cl.item}>\r\n      <img src=\"https://best-fly.ru/wp-content/uploads/2020/08/ikonka-malchik.jpg\" />\r\n      <p>{props.message}</p>\r\n      <div>\r\n        <span>{likes}</span>\r\n        <button onClick={checkLikes} className={cl.like}>like</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post\r\n","import React, {memo} from 'react'\r\nimport cl from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../../utils/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength = maxLengthCreator(10)\r\n\r\nconst minLength = minLengthCreator(1)\r\n\r\nconst MyPosts = memo(props => {\r\n    let postsData = props.posts\r\n    let postsElements = postsData.map((p) => <Post key={p.id} message={p.message} likes={p.likesCount}/>)\r\n    const addPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n    return (\r\n        <div className={cl.posts}>\r\n            <AddPostReduxForm onSubmit={addPost}/>\r\n            <div className={cl.postsTitle}>My posts</div>\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={cl.postsAdd}>\r\n                <Field name=\"newPostText\" placeholder=\"Enter your post\" component={Textarea} validate={[required, maxLength, minLength]} className={cl.postsTextarea}/>\r\n            <button className={cl.postsBtn}>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({form: 'post'})(AddNewPostForm)\r\n\r\nexport default MyPosts\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.postsData,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react'\r\nimport cl from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n    <div className={cl.content}>\r\n      <ProfileInfo status={props.status} updateStatus={props.updateStatus} profile={props.profile}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, setUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {useLocation, useNavigate, useParams} from 'react-router-dom'\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nclass ProfileContainer extends React.Component{\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId ;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n\r\n    render() {\r\n        return <Profile {...this.props} updateStatus={this.props.updateStatus} profile={this.props.profile} status={this.props.status} />;\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({profile: state.profilePage.profile, status: state.profilePage.status, authorizedUserId: state.auth.userId, isAuth: state.auth.isAuth})\r\n\r\nexport default compose(connect(mapStateToProps, {setUserProfile, getProfile, getStatus, updateStatus}), withRouter, withAuthRedirect)(ProfileContainer);\r\n","import React from 'react';\r\nimport cl from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../../../utils/validators\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error\r\n\r\n    return (\r\n        <div className={`${cl.formControl}  ${hasError && cl.error}`}>\r\n            {children}\r\n            {hasError && <div>{error}</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n};\r\n\r\nexport const CreateField = ({placeholder, name, validators, component, props = {}, text = \"\"}) => {\r\n    return (\r\n        <label>\r\n            <Field validate={validators} component={component} name={name} placeholder={placeholder} {...props}/> {text}\r\n        </label>\r\n    )\r\n}","import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({isAuth: state.auth.isAuth})\r\n\r\n\r\nexport let withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","export const required = (value) => {\r\n    if(value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n    if(value.length < minLength) return `Min length is ${minLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__xHSZX\",\"error\":\"FormsControls_error__6OijT\",\"errorRight\":\"FormsControls_errorRight__OhQ5L\",\"formSummaryError\":\"FormsControls_formSummaryError__E-rfX\"};"],"names":["React","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","value","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","type","profile","src","className","cl","photos","small","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","website","href","facebook","target","vk","twitter","instagram","youtube","github","Preloader","likes","setLikes","liked","setLiked","message","onClick","maxLength","maxLengthCreator","minLength","minLengthCreator","MyPosts","memo","postsElements","posts","map","p","likesCount","id","AddPostReduxForm","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","name","placeholder","component","Textarea","validate","required","connect","state","profilePage","postsData","dispatch","addPostActionCreator","ProfileContainer","userId","this","router","params","authorizedUserId","getProfile","getStatus","compose","auth","isAuth","setUserProfile","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect","FormControl","input","meta","touched","error","children","hasError","restProps","child","Input","CreateField","validators","text","mapStateToPropsForRedirect","RedirectComponent","to","length"],"sourceRoot":""}