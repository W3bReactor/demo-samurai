{"version":3,"file":"static/js/294.b81a1c3d.chunk.js","mappings":"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","sources":["webpack://project/./src/components/Login/Login.module.css?3530","components/Login/Login.jsx","components/common/FormsControls/FormsControls.jsx","utils/validators/index.js","webpack://project/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Login_title__kZXF4\",\"form\":\"Login_form__JFRAY\",\"login\":\"Login_login__Xh9Uu\",\"password\":\"Login_password__+Cyht\",\"checkboxInner\":\"Login_checkboxInner__VsJYg\",\"btn\":\"Login_btn__fFpeF\"};","import React from 'react';\r\nimport cl from './Login.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, CreateField} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, logout} from \"../../redux/auth-reducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport formCl from '../common/FormsControls/FormsControls.module.css'\r\n\r\nconst Login = ({login, isAuth}) => {\r\n    const onSubmit = (formData) => {\r\n        login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Navigate to=\"/profile\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className={cl.title}>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={cl.form}>\r\n            <CreateField placeholder=\"Email\" component={Input} validators={[required]} name=\"email\"\r\n                         className={cl.login}/>\r\n            <CreateField className={cl.password} placeholder=\"Password\" component={Input} validators={[required]}\r\n                         name=\"password\" props={{type: \"password\"}} className={cl.login}/>\r\n            <label className={cl.checkboxInner}>\r\n                <CreateField placeholder={null} component={Input} validators={[]} name=\"rememberMe\"\r\n                             props={{type: \"checkbox\"}} text={\"remember me\"} className={cl.login}/>\r\n            </label>\r\n            {error &&\r\n                <label className={formCl.formSummaryError}>\r\n                    {error}\r\n                </label>\r\n            }\r\n\r\n            <label>\r\n                <button className={cl.btn}>Login</button>\r\n            </label>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst mapStateToProps = (state) => ({isAuth: state.auth.isAuth})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react';\r\nimport cl from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../../../utils/validators\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error\r\n\r\n    return (\r\n        <div className={`${cl.formControl}  ${hasError && cl.error}`}>\r\n            {children}\r\n            {hasError && <div>{error}</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n};\r\n\r\nexport const CreateField = ({placeholder, name, validators, component, props = {}, text = \"\"}) => {\r\n    return (\r\n        <label>\r\n            <Field validate={validators} component={component} name={name} placeholder={placeholder} {...props}/> {text}\r\n        </label>\r\n    )\r\n}","export const required = (value) => {\r\n    if(value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n    if(value.length < minLength) return `Min length is ${minLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__xHSZX\",\"error\":\"FormsControls_error__6OijT\",\"errorRight\":\"FormsControls_errorRight__OhQ5L\",\"formSummaryError\":\"FormsControls_formSummaryError__E-rfX\"};"],"names":["LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","className","cl","placeholder","component","Input","validators","required","name","props","type","text","formCl","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe","FormControl","input","meta","touched","children","hasError","Textarea","restProps","child","CreateField","validate","value","maxLengthCreator","maxLength","length","minLengthCreator","minLength"],"sourceRoot":""}